<?xml version="1.0" encoding="UTF-8"?><testrun name="IsNegative" project="calculator" tests="3" started="3" failures="1" errors="0" ignored="0">
  <testsuite name="com.epam.mentoring.calculator.junit.IsNegative" time="0.001">
    <testsuite name="[0]" time="0.0">
      <testcase name="isNegative[0]" classname="com.epam.mentoring.calculator.junit.IsNegative" time="0.0">
        <failure>java.lang.AssertionError&#13;
	at org.junit.Assert.fail(Assert.java:92)&#13;
	at org.junit.Assert.assertTrue(Assert.java:43)&#13;
	at org.junit.Assert.assertTrue(Assert.java:54)&#13;
	at com.epam.mentoring.calculator.junit.IsNegative.isNegative(IsNegative.java:22)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:24)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</failure>
      </testcase>
    </testsuite>
    <testsuite name="[1]" time="0.001">
      <testcase name="isNegative[1]" classname="com.epam.mentoring.calculator.junit.IsNegative" time="0.001"/>
    </testsuite>
    <testsuite name="[2]" time="0.0">
      <testcase name="isNegative[2]" classname="com.epam.mentoring.calculator.junit.IsNegative" time="0.0"/>
    </testsuite>
  </testsuite>
</testrun>
